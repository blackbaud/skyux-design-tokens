name: Release Please

on:
  schedule:
    - cron: '0 5 * * *'
  workflow_dispatch:
  push:
    branches:
      - master
      - '[0-9]+.x.x'

env:
  PRERELEASE: 'false'
  MAJOR_VERSION: 3

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Next release
        if: ${{ env.PRERELEASE != 'false' }}
        id: next-release
        run: |
          # Log commands and exit on error.
          set -exo pipefail

          if [[ "${PRERELEASE}" != "alpha" && "${PRERELEASE}" != "beta" && "${PRERELEASE}" != "rc" ]]; then
            echo "Invalid PRERELEASE value. Must be 'alpha', 'beta', or 'rc'."
            exit 1
          fi

          # Get the current prerelease version.
          ACC="Accept: application/vnd.github+json"
          VER="X-GitHub-Api-Version: 2022-11-28"
          JSON='sort_by(.published_at) | reverse | map(.tag_name) | [.[] | select(startswith("${{ env.MAJOR_VERSION }}.")) ] | .[0] // empty'
          CURRENT_RELEASE=$(gh api -H "${ACC}" -H "${VER}" /repos/${{ github.repository }}/releases | jq -r "${JSON}")

          # Bump the prerelease version.
          if [[ -z "$CURRENT_RELEASE" || "$CURRENT_RELEASE" != "${{ env.MAJOR_VERSION }}.0.0-${{ env.PRERELEASE }}."* ]]; then
            NEXT_VERSION="${{ env.MAJOR_VERSION }}.0.0-${{ env.PRERELEASE }}.0"
          else
            NEXT_VERSION=$(npx --yes semver -i prerelease $CURRENT_RELEASE)
          fi

          # If version is empty, exit.
          if [ -z "$NEXT_VERSION" ]; then
            echo "Not able to determine prerelease version."
            exit 1
          fi

          echo "Next release version: $NEXT_VERSION"
          echo "next-release=$NEXT_VERSION" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"deprecation","section":"Deprecations","hidden":false},{"type":"revert","section":"Reverts","hidden":false}]'
          release-type: 'node'
          default-branch: '${{ github.ref_name }}'
          package-name: '@blackbaud/skyux-design-tokens'
          pull-request-title-pattern: 'chore: release ${version}'
          labels: 'autorelease ${{ github.ref_name }}: pending'
          release-labels: 'autorelease ${{ github.ref_name }}: tagged'
          # release-as: '${{ steps.next-release.outputs.next-release }}'
          release-as: '3.0.0'
          prerelease: ${{ env.PRERELEASE != 'false' }}
          draft-pull-request: true
          include-v-in-tag: false
          token: '${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}'
